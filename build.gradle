plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 직렬화를 위한 Jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	// ✅ Lombok (자동 getter/setter)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ Spring Boot Starter Web (REST API 개발)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ Spring Security (BCryptPasswordEncoder 사용)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// ✅ JPA & MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// ✅ Validation (회원가입 시 유효성 검사)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
