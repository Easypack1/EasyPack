plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ Jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

	// ✅ Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ MySQL
	implementation 'mysql:mysql-connector-java:8.0.33'

	// ✅ Lombok (JDK 21 호환을 위해 최신 버전 명시)
	implementation 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// ✅ OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// ✅ Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}

// ✅ ShadowJar 플러그인 (필요할 경우만)
if (project.hasProperty('enableShadow')) {
	apply plugin: 'com.github.johnrengelman.shadow'

	dependencies {
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
	}

	bootJar {
		enabled = false
	}

	shadowJar {
		mergeServiceFiles()
	}
}
